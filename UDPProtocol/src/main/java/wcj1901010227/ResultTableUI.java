/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wcj1901010227;

import java.awt.Font;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author VACation
 */
public class ResultTableUI extends javax.swing.JFrame {

    AdminUI parentUI=null;
    String orderString=null;
    SqlHelper sqlHelper=null;
    /**
     * Creates new form ResultTableUI
     */
    public ResultTableUI() {
        initComponents();
        
    }
    public ResultTableUI(String orderString,AdminUI parentUI,SqlHelper sqlHelper)
    {
        this();
        this.orderString=orderString;
        this.setTitle(orderString);
        if(!orderString.equals("删除学生信息"))
        {
            btnComfirm.setVisible(false);
            btnQuit.setVisible(false);
            tipLabel.setVisible(false);
        }
        if(orderString.equals("修改学生信息"))
        {
            btnComfirm.setVisible(true);
            btnQuit.setVisible(true);
            tipLabel.setVisible(true);
            tipLabel.setText("按确定键应用更改");
        }
        this.parentUI=parentUI;
        this.sqlHelper=sqlHelper;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        btnComfirm = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        tipLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        ResultTable.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "账号", "密码", "昵称", "状态", "性别", "班级", "注册时间", "选择"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ResultTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        ResultTable.setRowHeight(30);
        jScrollPane1.setViewportView(ResultTable);

        btnComfirm.setBackground(new java.awt.Color(255, 51, 51));
        btnComfirm.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnComfirm.setText("确定");
        btnComfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComfirmActionPerformed(evt);
            }
        });

        btnQuit.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnQuit.setText("取消");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        tipLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        tipLabel.setText("按确定删除选中行");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnComfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnComfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuit, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnComfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComfirmActionPerformed
        // TODO add your handling code here:
        if(orderString.equals("删除学生信息"))
        {
            ExecuteDel();
        }
        else if(orderString.equals("修改学生信息"))
        {
            ExecuteModify();
        }
        
    }//GEN-LAST:event_btnComfirmActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnQuitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultTableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultTableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultTableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultTableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultTableUI().setVisible(true);
            }
        });
    }
    public void setTableModel(DefaultTableModel tableModel)
    {
       
        
        ResultTable.setModel(tableModel);
        JTableHeader header=ResultTable.getTableHeader();
        header.setFont(new Font("微软雅黑", Font.PLAIN, 20));	
        
    }
    
    private boolean DeleteData(String account)
    {
        boolean check=false;
        check=sqlHelper.DeleteInfo(account);
        return check;
    }
    
    private void ExecuteDel()
    {
        
        int rowNum=ResultTable.getRowCount();

        ArrayList<String> deleteList=new ArrayList<>();
        for(int i=0;i<rowNum;i++)
        {
            if(ResultTable.getValueAt(i, 8).equals(true))
            {
                deleteList.add(ResultTable.getValueAt(i, 0).toString());
            }
        }
        int response=JOptionPane.showConfirmDialog(null, "按确定删除所选行", "删除数据", 2);
        if(response==0)
        {
            
            for(int i=0;i<deleteList.size();i++)
            {
                boolean check=DeleteData(deleteList.get(i));
                if(check==false)
                {
                    JOptionPane.showMessageDialog(null, "删除数据异常");
                    break;
                }
                DefaultTableModel tableModel=(DefaultTableModel)ResultTable.getModel();
                tableModel.removeRow(i);
//                ResultTable.removeRowSelectionInterval(i, i);
                ResultTable.updateUI();
            }
        }
        else
        {
            return;
        }
        
        System.out.println("您删除了"+deleteList.size()+"行");
        
    }
    
    
    private void ExecuteModify()
    {
        int response=JOptionPane.showConfirmDialog(null, "按确定更新信息", "删除数据", 2);
        if (response == 0) {
            boolean check = false;
            DefaultTableModel tableModel = (DefaultTableModel) ResultTable.getModel();
            Vector<Vector> dataVector = tableModel.getDataVector();
            Iterator iterator = dataVector.iterator();
            while (iterator.hasNext()) {
                Vector<Object> temp = (Vector<Object>) iterator.next();
                String account = (String) temp.get(0);
                String password = (String) temp.get(1);
                String nickName = (String) temp.get(2);
                String sex = (String) temp.get(3);
                boolean state = (boolean) temp.get(4);
                int stateNumber = 0;
                if (state == true) {
                    stateNumber = 0;
                } else {
                    stateNumber = 1;
                }
                String classString = (String) temp.get(5);

                check = sqlHelper.UpdateInfo(account, password, nickName, sex, stateNumber, classString);
                if (!check) {
                    JOptionPane.showMessageDialog(null, "更新数据异常");
                }
            }
            ResultTable.updateUI();
        }

       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton btnComfirm;
    private javax.swing.JButton btnQuit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel tipLabel;
    // End of variables declaration//GEN-END:variables
}
