/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wcj1901010227;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/**
 *
 * @author VACation
 */
public class TeacherSignUpUI extends javax.swing.JFrame {

    /**
     * Creates new form TeacherSignUpUI
     */
    int onlineNumber;
    int signupNumber;
    int continueTime;
    AdminUI parentUI;
    DatagramSocket clientSocket;
    InetAddress remoteAddress;
    int remotePort;
    DatagramPacket packet;
    Timer timer;
    int tablenumber;
    SqlHelper sqlHelper=new SqlHelper();
    String currentTableName=null;
    public TeacherSignUpUI() {
        initComponents();
    }
    public TeacherSignUpUI(int onlineNumber,int signupNumber,AdminUI parentUI)
    {
        this();
        
        this.onlineNumber=onlineNumber;
        this.signupNumber=signupNumber;
        this.parentUI=parentUI;
        txtOnline.setText(String.valueOf(onlineNumber));
        txtSigned.setText(String.valueOf(signupNumber));
        txtHour.setText("");
        txtMin.setText("");
        txtSec.setText("");

        try {
            clientSocket=new DatagramSocket();
            remoteAddress=parentUI.remoteAddress;
            remotePort=parentUI.remotePort;
            tablenumber=sqlHelper.GetSignUpTableNumber();
            System.out.println("目前一共有"+tablenumber+"张签到表");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"初始化失败",JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }
    private Boolean SendMessage(String messageType)
    {
        boolean check=false;
        Message message=new Message();
        message.setType(messageType);
        try {
                
                clientSocket.setSoTimeout(3000);//设置超时时间
                message.setToAddr(remoteAddress);
                message.setToPort(remotePort);
                message.setIsAdmin(true);
                message.setText(String.valueOf(continueTime));
                byte[] data=Translate.ObjectToByte(message);
                packet=new DatagramPacket(data, data.length,remoteAddress,remotePort);
                clientSocket.send(packet);
                check=true;
            } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"发送请求出错",JOptionPane.ERROR_MESSAGE);
            
        }
        return check;
    }
    private Message ReceiveMessage()
    {
        boolean check = false;
         Message backMessage=new Message();
        try {
            
            clientSocket.receive(packet);
            clientSocket.setSoTimeout(0);
            backMessage = (Message) Translate.ByteToObject(packet.getData());
            if (backMessage.getType().equalsIgnoreCase("M_SUCCESS")) {
                check = true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"接受消息出错",JOptionPane.ERROR_MESSAGE);
        }
        if(check)
        {
            return backMessage;
        }
        backMessage.setType("M_FAILURE");
        return backMessage;
    }

    public void ChangeOnline(int i)
    {
        onlineNumber+=i;
        txtOnline.setText(String.valueOf(onlineNumber));
    }
    public void ChangeSign(int i,Message message)
    {
        
        if(currentTableName!=null)
        {
            if(sqlHelper.CheckSignUp(currentTableName,message.getUserAccount(),i))
            {
                signupNumber+=i;
                txtSigned.setText(String.valueOf(signupNumber));
            }
            else
            {
                JOptionPane.showMessageDialog(null, "签到异常...");
            }
        }
        
    }
    
    private boolean CheckString(String string)
    {
        if(string.length()==0)
            return true;
        for(int i=0;i<string.length();i++)
        {
            char currentChar=string.charAt(i);
            if(currentChar<'0'||currentChar>'9')
                return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOnline = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSigned = new javax.swing.JTextField();
        txtHour = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSec = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        btnOver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "签到设置", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Microsoft YaHei UI", 0, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel1.setText("请设置签到持续时间");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel2.setText("当前在线学生：");

        txtOnline.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        txtOnline.setEnabled(false);
        txtOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOnlineActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel3.setText("已签到人数：");

        txtSigned.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        txtSigned.setEnabled(false);
        txtSigned.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSignedActionPerformed(evt);
            }
        });

        txtHour.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel4.setText("时");

        txtMin.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        txtMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel5.setText("分");

        txtSec.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jLabel6.setText("秒");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtSec, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(5, 5, 5)
                                .addComponent(txtOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSigned, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOnline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtSigned, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        btnStart.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnStart.setText("发起签到");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnOver.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnOver.setText("结束签到");
        btnOver.setEnabled(false);
        btnOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(btnOver, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnOver))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOnlineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOnlineActionPerformed

    private void txtSignedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSignedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSignedActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        int hour=0,minute=0,second=0;
        if(!(CheckString(txtHour.getText())&&CheckString(txtMin.getText())&&CheckString(txtSec.getText())))
        {
            JOptionPane.showMessageDialog(null, "请输入正確的签到持续时间");
            return;
        }
        
        if(!txtHour.getText().equals(""))
        {
            hour=Integer.parseInt(txtHour.getText());
        }
        if(!txtMin.getText().equals(""))
        {
            minute=Integer.parseInt(txtMin.getText());
        }
        if(!txtSec.getText().equals(""))
        {
            second=Integer.parseInt(txtSec.getText());
        }
        if(hour==0&&minute==0&&second==0)
        {
            JOptionPane.showMessageDialog(null, "请输入签到持续时间");
            return;
        }
        
        continueTime=hour*3600+minute*60+second;
        
       
        if(SendMessage("M_START"))
        {
            if(ReceiveMessage().getType().equalsIgnoreCase("M_SUCCESS"))
            {
                
                parentUI.parentUI.txtArea.append("您发起了一次签到...\n");
                
            }
        }
        
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                continueTime--;
                if (continueTime == 0) {
//                    timer.cancel();
//                    JOptionPane.showMessageDialog(null, "本次签到已结束");
                    btnOverActionPerformed(evt);
                    

                }
                txtHour.setText(String.valueOf(continueTime / 3600 % 60));
                txtMin.setText(String.valueOf(continueTime / 60 % 60));
                txtSec.setText(String.valueOf(continueTime % 60));
            }
        }, 0, 1000);
        btnStart.setEnabled(false);
        btnOver.setEnabled(true);
        txtHour.setEnabled(false);
        txtMin.setEnabled(false);
        txtSec.setEnabled(false);
        tablenumber++;
        if(sqlHelper.CreateSignUpTable(tablenumber))
        {
            currentTableName="signup_"+tablenumber;
            JOptionPane.showMessageDialog(null, "已成功发起签到");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "服务器好像在开小差...");
        }
        
        

    }//GEN-LAST:event_btnStartActionPerformed

    private void btnOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOverActionPerformed
        // TODO add your handling code here:
        timer.cancel();
        if(SendMessage("M_END"))
        {
            if(ReceiveMessage().getType().equalsIgnoreCase("M_SUCCESS"))
            {
                JOptionPane.showMessageDialog(null, "本次签到已结束,返回管理员页面可以查看结果");
                btnStart.setEnabled(true);
                btnOver.setEnabled(false);
                txtHour.setEnabled(true);
                txtMin.setEnabled(true);
                txtSec.setEnabled(true);
                dispose();
            }
        }
        
    }//GEN-LAST:event_btnOverActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.parentUI.signupUI=null;
    }//GEN-LAST:event_formWindowClosed

    private void txtMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherSignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherSignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherSignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherSignUpUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherSignUpUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOver;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtHour;
    private javax.swing.JTextField txtMin;
    private javax.swing.JTextField txtOnline;
    private javax.swing.JTextField txtSec;
    private javax.swing.JTextField txtSigned;
    // End of variables declaration//GEN-END:variables
}
